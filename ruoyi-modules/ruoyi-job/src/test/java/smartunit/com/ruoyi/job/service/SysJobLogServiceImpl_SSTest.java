/*
 * This file was automatically generated by SmartUnit
 */

package smartunit.com.ruoyi.job.service;

import org.junit.Test;
import static org.junit.Assert.*;
import java.lang.reflect.Method;
import static org.smartunit.shaded.org.mockito.Mockito.*;
import org.smartunit.shaded.org.mockito.ArgumentMatchers;
import com.ruoyi.job.domain.SysJobLog;
import com.ruoyi.job.mapper.SysJobLogMapper;
import com.ruoyi.job.service.SysJobLogServiceImpl;
import java.util.List;
import org.junit.runner.RunWith;
import org.smartunit.runtime.ExecutorServiceAnswer;
import org.smartunit.runtime.PrivateAccess;
import org.smartunit.runtime.SmartRunner;
import org.smartunit.runtime.SmartRunnerParameters;
import org.smartunit.runtime.TransactionTemplateAnswer;
import org.smartunit.runtime.ViolatedAssumptionAnswer;

@RunWith(SmartRunner.class) @SmartRunnerParameters(mockJVMNonDeterminism = true, useVFS = true, useVNET = true, resetStaticState = true) 
public class SysJobLogServiceImpl_SSTest extends SysJobLogServiceImpl_SSTest_scaffolding {
// allCoveredLines:[15, 29, 41, 52, 53, 64, 75, 84, 85]

  @Test(timeout = 4000)
  public void test_addJobLog_0()  throws Throwable  {
      //caseID:af7df5553985b1af1c73313e3278143b
      //CoveredLines: [15, 52, 53]
      //Input_0_SysJobLog: {}
      
      SysJobLogServiceImpl sysJobLogServiceImpl0 = new SysJobLogServiceImpl();
      //mock sysJobLogMapper0
      SysJobLogMapper sysJobLogMapper0 = mock(SysJobLogMapper.class, withSettings().defaultAnswer(new ViolatedAssumptionAnswer()).stubOnly());
      
      PrivateAccess.setVariable((Class<?>) SysJobLogServiceImpl.class, sysJobLogServiceImpl0, "jobLogMapper", (Object) sysJobLogMapper0);
      //mock sysJobLog0
      SysJobLog sysJobLog0 = mock(SysJobLog.class, withSettings().defaultAnswer(new ViolatedAssumptionAnswer()).stubOnly());
      
      //Call method: addJobLog
      sysJobLogServiceImpl0.addJobLog(sysJobLog0);
  }

  @Test(timeout = 4000)
  public void test_cleanJobLog_1()  throws Throwable  {
      //caseID:5f3bd5e12d6a58fba93aec91efc79194
      //CoveredLines: [15, 84, 85]
      
      SysJobLogServiceImpl sysJobLogServiceImpl0 = new SysJobLogServiceImpl();
      //mock sysJobLogMapper0
      SysJobLogMapper sysJobLogMapper0 = mock(SysJobLogMapper.class, withSettings().defaultAnswer(new ViolatedAssumptionAnswer()).stubOnly());
      
      PrivateAccess.setVariable((Class<?>) SysJobLogServiceImpl.class, sysJobLogServiceImpl0, "jobLogMapper", (Object) sysJobLogMapper0);
      
      //Call method: cleanJobLog
      sysJobLogServiceImpl0.cleanJobLog();
  }

  @Test(timeout = 4000)
  public void test_deleteJobLogById_2()  throws Throwable  {
      //caseID:9a331ac6bd143d5ef912fca39d12a639
      //CoveredLines: [15, 75]
      //Input_0_Long: 607L
      //Assert: assertEquals(0, method_result);
      
      SysJobLogServiceImpl sysJobLogServiceImpl0 = new SysJobLogServiceImpl();
      //mock sysJobLogMapper0
      SysJobLogMapper sysJobLogMapper0 = mock(SysJobLogMapper.class, withSettings().defaultAnswer(new ViolatedAssumptionAnswer()).stubOnly());
      
      PrivateAccess.setVariable((Class<?>) SysJobLogServiceImpl.class, sysJobLogServiceImpl0, "jobLogMapper", (Object) sysJobLogMapper0);
      Long long0 = new Long(607L);
      
      //Call method: deleteJobLogById
      int int0 = sysJobLogServiceImpl0.deleteJobLogById(long0);
      
      //Test Result Assert
      assertEquals(0, int0);
  }

  @Test(timeout = 4000)
  public void test_deleteJobLogByIds_3()  throws Throwable  {
      //caseID:91224ebd2565b169b0c4f7de3152735f
      //CoveredLines: [15, 64]
      //Input_0_Long[]: longArray0
      //Assert: assertEquals(0, method_result);
      
      SysJobLogServiceImpl sysJobLogServiceImpl0 = new SysJobLogServiceImpl();
      //mock sysJobLogMapper0
      SysJobLogMapper sysJobLogMapper0 = mock(SysJobLogMapper.class, withSettings().defaultAnswer(new ViolatedAssumptionAnswer()).stubOnly());
      doReturn(0).when(sysJobLogMapper0).deleteJobLogByIds(any(java.lang.Long[].class));
      
      PrivateAccess.setVariable((Class<?>) SysJobLogServiceImpl.class, sysJobLogServiceImpl0, "jobLogMapper", (Object) sysJobLogMapper0);
      Long[] longArray0 = new Long[5];
      
      //Call method: deleteJobLogByIds
      int int0 = sysJobLogServiceImpl0.deleteJobLogByIds(longArray0);
      
      //Test Result Assert
      assertEquals(0, int0);
  }

  @Test(timeout = 4000)
  public void test_selectJobLogById_4()  throws Throwable  {
      //caseID:fe72e6c6ff30b0b26999228c9c658651
      //CoveredLines: [15, 41]
      //Input_0_Long: 0L
      //Assert: assertNull(method_result);
      
      SysJobLogServiceImpl sysJobLogServiceImpl0 = new SysJobLogServiceImpl();
      //mock sysJobLogMapper0
      SysJobLogMapper sysJobLogMapper0 = mock(SysJobLogMapper.class, withSettings().defaultAnswer(new ViolatedAssumptionAnswer()).stubOnly());
      
      PrivateAccess.setVariable((Class<?>) SysJobLogServiceImpl.class, sysJobLogServiceImpl0, "jobLogMapper", (Object) sysJobLogMapper0);
      Long long0 = new Long(0L);
      
      //Call method: selectJobLogById
      SysJobLog sysJobLog0 = sysJobLogServiceImpl0.selectJobLogById(long0);
      
      //Test Result Assert
      assertNull(sysJobLog0);
  }

  @Test(timeout = 4000)
  public void test_selectJobLogList_5()  throws Throwable  {
      //caseID:e46bf61d8b3dac5d0062f402692df5bb
      //CoveredLines: [15, 29]
      //Input_0_SysJobLog: {}
      //Assert: assertNull(method_result);
      
      SysJobLogServiceImpl sysJobLogServiceImpl0 = new SysJobLogServiceImpl();
      //mock sysJobLogMapper0
      SysJobLogMapper sysJobLogMapper0 = mock(SysJobLogMapper.class, withSettings().defaultAnswer(new ViolatedAssumptionAnswer()).stubOnly());
      
      PrivateAccess.setVariable((Class<?>) SysJobLogServiceImpl.class, sysJobLogServiceImpl0, "jobLogMapper", (Object) sysJobLogMapper0);
      //mock sysJobLog0
      SysJobLog sysJobLog0 = mock(SysJobLog.class, withSettings().defaultAnswer(new ViolatedAssumptionAnswer()).stubOnly());
      
      //Call method: selectJobLogList
      List<SysJobLog> list0 = sysJobLogServiceImpl0.selectJobLogList(sysJobLog0);
      
      //Test Result Assert
      assertNull(list0);
  }
}
