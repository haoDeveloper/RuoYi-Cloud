/*
 * This file was automatically generated by SmartUnit
 */

package smartunit.com.ruoyi.system.service.impl;

import org.junit.Test;
import static org.junit.Assert.*;
import java.lang.reflect.Method;
import static org.smartunit.shaded.org.mockito.Mockito.*;
import org.smartunit.shaded.org.mockito.ArgumentMatchers;
import com.ruoyi.system.api.model.LoginUser;
import com.ruoyi.system.domain.SysUserOnline;
import com.ruoyi.system.service.impl.SysUserOnlineServiceImpl;
import org.junit.runner.RunWith;
import org.smartunit.runtime.ExecutorServiceAnswer;
import org.smartunit.runtime.SmartRunner;
import org.smartunit.runtime.SmartRunnerParameters;
import org.smartunit.runtime.TransactionTemplateAnswer;
import org.smartunit.runtime.ViolatedAssumptionAnswer;

@RunWith(SmartRunner.class) @SmartRunnerParameters(mockJVMNonDeterminism = true, useVFS = true, useVNET = true, resetStaticState = true) 
public class SysUserOnlineServiceImpl_SSTest extends SysUserOnlineServiceImpl_SSTest_scaffolding {
// allCoveredLines:[15, 27, 29, 31, 44, 46, 48, 62, 64, 66, 78, 80, 82, 83, 84, 85, 86, 87]

  @Test(timeout = 4000)
  public void test_loginUserToUserOnline_0()  throws Throwable  {
      //caseID:94537a466e366f1d071bab933146f42b
      //CoveredLines: [15, 78, 80]
      //Input_0_LoginUser: null
      //Assert: assertNull(method_result);
      
      SysUserOnlineServiceImpl sysUserOnlineServiceImpl0 = new SysUserOnlineServiceImpl();
      
      //Call method: loginUserToUserOnline
      SysUserOnline sysUserOnline0 = sysUserOnlineServiceImpl0.loginUserToUserOnline((LoginUser) null);
      
      //Test Result Assert
      assertNull(sysUserOnline0);
  }

  @Test(timeout = 4000)
  public void test_selectOnlineByInfo_1()  throws Throwable  {
      //caseID:85d267e53ef015058be2cf4eed9264f5
      //CoveredLines: [15, 62, 66]
      //Input_0_String: org.apache.commons.io.filefilter.FileFileFilter
      //Input_1_String: 1
      //Input_2_LoginUser: {getIpaddr=\"org.apache.commons.io.filefilter.FileFileFilter\"}
      //Assert: assertNull(method_result);
      
      SysUserOnlineServiceImpl sysUserOnlineServiceImpl0 = new SysUserOnlineServiceImpl();
      //mock loginUser0
      LoginUser loginUser0 = mock(LoginUser.class, withSettings().defaultAnswer(new ViolatedAssumptionAnswer()).stubOnly());
      doReturn("org.apache.commons.io.filefilter.FileFileFilter").when(loginUser0).getIpaddr();
      
      //Call method: selectOnlineByInfo
      SysUserOnline sysUserOnline0 = sysUserOnlineServiceImpl0.selectOnlineByInfo("org.apache.commons.io.filefilter.FileFileFilter", "1", loginUser0);
      
      //Test Result Assert
      assertNull(sysUserOnline0);
  }

  @Test(timeout = 4000)
  public void test_selectOnlineByInfo_2()  throws Throwable  {
      //caseID:add00fa6caa4c8a59e987f1b35bbe54d
      //CoveredLines: [15, 62, 66]
      //Input_0_String: org.apache.commons.io.filefilter.FileFileFilter
      //Input_1_String: 1
      //Input_2_LoginUser: {}
      //Assert: assertNull(method_result);
      
      SysUserOnlineServiceImpl sysUserOnlineServiceImpl0 = new SysUserOnlineServiceImpl();
      //mock loginUser0
      LoginUser loginUser0 = mock(LoginUser.class, withSettings().defaultAnswer(new ViolatedAssumptionAnswer()).stubOnly());
      
      //Call method: selectOnlineByInfo
      SysUserOnline sysUserOnline0 = sysUserOnlineServiceImpl0.selectOnlineByInfo("org.apache.commons.io.filefilter.FileFileFilter", "1", loginUser0);
      
      //Test Result Assert
      assertNull(sysUserOnline0);
  }

  @Test(timeout = 4000)
  public void test_selectOnlineByInfo_3()  throws Throwable  {
      //caseID:8e88c8eccc444d741122b2d179e574b0
      //CoveredLines: [15, 62, 64, 78, 82, 83, 84, 85, 86, 87]
      //Input_0_String: 1.0
      //Input_1_String: }e;)FT!D#K
      //Input_2_LoginUser: {getIpaddr=\"1.0\", getUsername=\"}e;)FT!D#K\"}
      //Assert: assertNotNull(method_result);
      //Assert: assertNull(method_result.getOs());
      
      SysUserOnlineServiceImpl sysUserOnlineServiceImpl0 = new SysUserOnlineServiceImpl();
      //mock loginUser0
      LoginUser loginUser0 = mock(LoginUser.class, withSettings().defaultAnswer(new ViolatedAssumptionAnswer()).stubOnly());
      doReturn("1.0").when(loginUser0).getIpaddr();
      doReturn("}e;)FT!D#K").when(loginUser0).getUsername();
      
      //Call method: selectOnlineByInfo
      SysUserOnline sysUserOnline0 = sysUserOnlineServiceImpl0.selectOnlineByInfo("1.0", "}e;)FT!D#K", loginUser0);
      
      //Test Result Assert
      assertNotNull(sysUserOnline0);
      
      //Test Result Assert
      assertNull(sysUserOnline0.getOs());
  }

  @Test(timeout = 4000)
  public void test_selectOnlineByIpaddr_4()  throws Throwable  {
      //caseID:403ade04e553c680fff1b0d5575b088e
      //CoveredLines: [15, 27, 31]
      //Input_0_String: bean
      //Input_1_LoginUser: {}
      //Assert: assertNull(method_result);
      
      SysUserOnlineServiceImpl sysUserOnlineServiceImpl0 = new SysUserOnlineServiceImpl();
      //mock loginUser0
      LoginUser loginUser0 = mock(LoginUser.class, withSettings().defaultAnswer(new ViolatedAssumptionAnswer()).stubOnly());
      
      //Call method: selectOnlineByIpaddr
      SysUserOnline sysUserOnline0 = sysUserOnlineServiceImpl0.selectOnlineByIpaddr("bean", loginUser0);
      
      //Test Result Assert
      assertNull(sysUserOnline0);
  }

  @Test(timeout = 4000)
  public void test_selectOnlineByIpaddr_5()  throws Throwable  {
      //caseID:a3ab525541378e684ce7f5a414bcd119
      //CoveredLines: [15, 27, 29, 78, 82, 83, 84, 85, 86, 87]
      //Input_0_String: Exceptions
      //Input_1_LoginUser: {getIpaddr=\"Exceptions\"}
      //Assert: assertNotNull(method_result);
      //Assert: assertNull(method_result.getTokenId());
      
      SysUserOnlineServiceImpl sysUserOnlineServiceImpl0 = new SysUserOnlineServiceImpl();
      //mock loginUser0
      LoginUser loginUser0 = mock(LoginUser.class, withSettings().defaultAnswer(new ViolatedAssumptionAnswer()).stubOnly());
      doReturn("Exceptions").when(loginUser0).getIpaddr();
      
      //Call method: selectOnlineByIpaddr
      SysUserOnline sysUserOnline0 = sysUserOnlineServiceImpl0.selectOnlineByIpaddr("Exceptions", loginUser0);
      
      //Test Result Assert
      assertNotNull(sysUserOnline0);
      
      //Test Result Assert
      assertNull(sysUserOnline0.getTokenId());
  }

  @Test(timeout = 4000)
  public void test_selectOnlineByUserName_6()  throws Throwable  {
      //caseID:9c61f6076626fdc11c0a96eca6a9b0e2
      //CoveredLines: [15, 44, 48]
      //Input_0_String: com.alibaba.fastjson2.JSONPathSegment$MinSegment
      //Input_1_LoginUser: {}
      //Assert: assertNull(method_result);
      
      SysUserOnlineServiceImpl sysUserOnlineServiceImpl0 = new SysUserOnlineServiceImpl();
      //mock loginUser0
      LoginUser loginUser0 = mock(LoginUser.class, withSettings().defaultAnswer(new ViolatedAssumptionAnswer()).stubOnly());
      
      //Call method: selectOnlineByUserName
      SysUserOnline sysUserOnline0 = sysUserOnlineServiceImpl0.selectOnlineByUserName("com.alibaba.fastjson2.JSONPathSegment$MinSegment", loginUser0);
      
      //Test Result Assert
      assertNull(sysUserOnline0);
  }

  @Test(timeout = 4000)
  public void test_selectOnlineByUserName_7()  throws Throwable  {
      //caseID:5e3cf305bb9fa0fe7570c3a956f2a683
      //CoveredLines: [15, 44, 46, 78, 82, 83, 84, 85, 86, 87]
      //Input_0_String: 
      //Input_1_LoginUser: {getUsername=\"\"}
      //Assert: assertNotNull(method_result);
      //Assert: assertNull(method_result.getLoginTime());
      
      SysUserOnlineServiceImpl sysUserOnlineServiceImpl0 = new SysUserOnlineServiceImpl();
      //mock loginUser0
      LoginUser loginUser0 = mock(LoginUser.class, withSettings().defaultAnswer(new ViolatedAssumptionAnswer()).stubOnly());
      doReturn("").when(loginUser0).getUsername();
      
      //Call method: selectOnlineByUserName
      SysUserOnline sysUserOnline0 = sysUserOnlineServiceImpl0.selectOnlineByUserName("", loginUser0);
      
      //Test Result Assert
      assertNotNull(sysUserOnline0);
      
      //Test Result Assert
      assertNull(sysUserOnline0.getLoginTime());
  }
}
